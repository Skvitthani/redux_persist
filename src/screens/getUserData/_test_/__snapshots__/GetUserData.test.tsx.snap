// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GetUserData renders correctly 1`] = `
<View
  style={
    {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    contentContainerStyle={
      {
        "flex": 1,
      }
    }
    data={
      {
        "repositories": {
          "loading": false,
          "repos": [],
        },
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            {
              "color": "black",
              "fontSize": 20,
              "fontWeight": "bold",
            }
          }
        >
          No Data Found
        </Text>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      {
        "marginBottom": 50,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#706233",
          "borderRadius": 20,
          "marginHorizontal": 30,
          "opacity": 1,
          "padding": 20,
        }
      }
      testID="delete_data_button"
    >
      <Text
        style={
          {
            "color": "white",
            "fontSize": 20,
            "fontWeight": "bold",
          }
        }
      >
        Delete Data
      </Text>
    </View>
  </View>
</View>
`;
